#include<stdio.h>

void QuickSort(int arr[], int left, int right, int flag) {
	int L = left, R = right;
	int temp;
	int pivot = arr[(left + right) / 2]; 

	//printf("L : %d / pivot : %d / R : %d\n", L, (left + right) / 2, R);		
																		//flag가 1이면 오름차순, 0이면 내림차순
	if (flag)
	{
		while (L <= R) {

			
			while (arr[L] < pivot) 
				L++;
			while (arr[R] > pivot) 
				R--;

			if (L <= R) { 
				if (L != R) {
					temp = arr[L];
					arr[L] = arr[R];
					arr[R] = temp;
				} 
				L++; R--;


				for (int i = 0; i < 10; i++) {
					printf("%2d ", arr[i]);
				}
				printf("\n");
			}
		}
	}
	else
	{
		while (L <= R) {

			while (arr[L] > pivot)
				L++;
			while (arr[R] < pivot)
				R--;

			if (L <= R) {
				if (L != R) { 
					temp = arr[L];
					arr[L] = arr[R];
					arr[R] = temp;
				} 
				L++; R--; 


				for (int i = 0; i < 10; i++) {
					printf("%2d ", arr[i]);
				}
				printf("\n");
			}
		}
	}


	
	if (left < R)
		QuickSort(arr, left, R, 0);
	if (L < right)
		QuickSort(arr, L, right, 0);
}



int main(void) {
	int data[10] = { 2, 9, 4, 18, 5, 1, 7, 8, 15, 12 };

	printf(" --------정렬 전 배열모습--------\n"); 
	for (int i = 0; i < 10; i++) {
		printf("%2d ", data[i]);
	}
	printf("\n\n");

	QuickSort(data, 0, 9, 0);

	printf(" --------정렬 후 모습--------\n");
	for (int i = 0; i < 10; i++) {
		printf("%2d ", data[i]);
	}
	printf("\n");
	return 0;
}