#include < stdio.h > 
#include < stdlib.h > 
#include <string.h>
#pragma warning(disable: 4996)

typedef struct font {
	char faceName[40];
	unsigned int size;
	int weight;
}FONT;

int comparisonFunctionString(const void *a, const void *b) {
	return(strcmp((char *)a, (char *)b));
}



int main() {
	int i;
	char input[] = "y", search[] = "";
	FONT arr[2];
	FONT* sFont;
	strcpy(arr[0].faceName,"바탕");
	arr[0].size = 10;
	arr[0].weight = 2;

	strcpy(arr[1].faceName,"궁서");
	arr[1].size = 14;
	arr[1].weight = 2;
	for (i = 0; i < 2; i++)
	{
		sFont = &arr[i];
		printf("폰트명 : %s\n폰트크기 : %d\n폰트두께 : %d\n", sFont->faceName, sFont->size, sFont->weight);
	}
	qsort(arr, sizeof(arr) / sizeof(FONT), sizeof(arr[0]), comparisonFunctionString);

	for (i = 0; i < 2; i++)
	{
		sFont = &arr[i];
		printf("폰트명 : %s\n폰트크기 : %d\n폰트두께 : %d\n", sFont->faceName, sFont->size, sFont->weight);
	}

	while (strcmp(input,"n")!=0) {
		char *temp = malloc(sizeof(char) * 10);
		printf("검색 할 폰트명 : ");
		scanf("%s",temp);
		strcpy(search, temp);
		free(temp);

		if (sFont = bsearch(search, arr, (sizeof(arr)/sizeof(FONT)), sizeof(FONT), comparisonFunctionString) != NULL){
			sFont = bsearch(search, arr, (sizeof(arr) / sizeof(FONT)), sizeof(FONT), comparisonFunctionString);
			printf("폰트명 : %s\n폰트크기 : %d\n폰트두께 : %d\n", sFont->faceName, sFont->size, sFont->weight);
		}

		else {
			printf("그런거 없음");
		}

		printf("계속 하시겠습니까? (Y/N) : ");
		char *in = malloc(sizeof(char) * 10);
		scanf("%s", in);
		strcpy(input, in);
		free(in);
	}
}