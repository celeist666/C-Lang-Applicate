#include<stdio.h>
#include<stdlib.h>
#pragma warning(disable: 4996)

typedef struct login_info {
	char id[20];
	char passwd[20];
}LOGIN_INFO;

int Compare(const void* e1, const void* e2) {

	return (strcmp(((LOGIN_INFO*)e1)->id, ((LOGIN_INFO*)e2)->id));
}

int BCompare(const void* e1, const void* e2) {
	return (strcmp(((LOGIN_INFO*)e1)->id, ((LOGIN_INFO*)e2)->id));
}

int main(int argc, char* argv[]) {
	FILE *fp1;
	int i = 0, size = 0, flag = 1;
	char* temp;
	char tempid[20], temppwd[20], tempsize[20];
	LOGIN_INFO* arr[100] = { NULL };
	fp1 = fopen("data.txt", "r");
	fscanf(fp1, "%d", &size);
	//fgets(tempsize, sizeof(tempsize), fp1);
	//printf("%c\n", tempsize[0]);
	//tempsize[strlen(tempsize) - 1] = '\0';
	printf("%d\n", size);
	printf("패스워드 파일을 읽었습니다. %d명의 사용자 정보가 있습니다\n", size);

	for (i = 0; i < size; i++)
	{
		arr[i] = malloc(sizeof(LOGIN_INFO));
		fscanf(fp1, "%s %s", arr[i]->id, arr[i]->passwd);
	}

	for (i = 0; i < size; i++)
	{
		printf("%s %s\n", arr[i]->id, arr[i]->passwd);
	}

	//qsort(arr, size, sizeof(LOGIN_INFO), Compare);

	while (flag) {
		puts("ID를 입력하세요 : ");
		fflush(stdin);
		scanf("%s", tempid);

		if (bsearch(tempid, arr, size, sizeof(LOGIN_INFO), BCompare) != NULL) {
			puts("LOGIN OK");
		}
		else
		{
			puts("LOGIN FAILED"); flag--;
		}
	}
	fclose(fp1);
}